/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class mao_archive_libzip_ZipFile */

#ifndef _Included_mao_archive_libzip_ZipFile
#define _Included_mao_archive_libzip_ZipFile
#ifdef __cplusplus
extern "C" {
#endif
#undef mao_archive_libzip_ZipFile_ZIP_CREATE
#define mao_archive_libzip_ZipFile_ZIP_CREATE 1L
#undef mao_archive_libzip_ZipFile_ZIP_EXCL
#define mao_archive_libzip_ZipFile_ZIP_EXCL 2L
#undef mao_archive_libzip_ZipFile_ZIP_CHECKCONS
#define mao_archive_libzip_ZipFile_ZIP_CHECKCONS 4L
#undef mao_archive_libzip_ZipFile_ZIP_TRUNCATE
#define mao_archive_libzip_ZipFile_ZIP_TRUNCATE 8L
#undef mao_archive_libzip_ZipFile_ZIP_RDONLY
#define mao_archive_libzip_ZipFile_ZIP_RDONLY 16L
#undef mao_archive_libzip_ZipFile_ZIP_EM_NONE
#define mao_archive_libzip_ZipFile_ZIP_EM_NONE 0L
#undef mao_archive_libzip_ZipFile_ZIP_EM_TRAD_PKWARE
#define mao_archive_libzip_ZipFile_ZIP_EM_TRAD_PKWARE 1L
#undef mao_archive_libzip_ZipFile_ZIP_EM_AES_128
#define mao_archive_libzip_ZipFile_ZIP_EM_AES_128 257L
#undef mao_archive_libzip_ZipFile_ZIP_EM_AES_192
#define mao_archive_libzip_ZipFile_ZIP_EM_AES_192 258L
#undef mao_archive_libzip_ZipFile_ZIP_EM_AES_256
#define mao_archive_libzip_ZipFile_ZIP_EM_AES_256 259L
#undef mao_archive_libzip_ZipFile_ZIP_EM_UNKNOWN
#define mao_archive_libzip_ZipFile_ZIP_EM_UNKNOWN 65535L
#undef mao_archive_libzip_ZipFile_ZIP_CM_DEFAULT
#define mao_archive_libzip_ZipFile_ZIP_CM_DEFAULT -1L
#undef mao_archive_libzip_ZipFile_ZIP_CM_STORE
#define mao_archive_libzip_ZipFile_ZIP_CM_STORE 0L
#undef mao_archive_libzip_ZipFile_ZIP_CM_DEFLATE
#define mao_archive_libzip_ZipFile_ZIP_CM_DEFLATE 8L
#undef mao_archive_libzip_ZipFile_ZIP_CM_BZIP2
#define mao_archive_libzip_ZipFile_ZIP_CM_BZIP2 12L
/*
 * Class:     mao_archive_libzip_ZipFile
 * Method:    initIDs
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_mao_archive_libzip_ZipFile_initIDs
  (JNIEnv *, jclass);

/*
 * Class:     mao_archive_libzip_ZipFile
 * Method:    open
 * Signature: (Ljava/lang/String;I)J
 */
JNIEXPORT jlong JNICALL Java_mao_archive_libzip_ZipFile_open
  (JNIEnv *, jclass, jstring, jint);

/*
 * Class:     mao_archive_libzip_ZipFile
 * Method:    getEntriesCount
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_mao_archive_libzip_ZipFile_getEntriesCount
  (JNIEnv *, jclass, jlong);

/*
 * Class:     mao_archive_libzip_ZipFile
 * Method:    setDefaultPassword0
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_mao_archive_libzip_ZipFile_setDefaultPassword0
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     mao_archive_libzip_ZipFile
 * Method:    getDefaultPassword0
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_mao_archive_libzip_ZipFile_getDefaultPassword0
  (JNIEnv *, jclass, jlong);

/*
 * Class:     mao_archive_libzip_ZipFile
 * Method:    removeEntry0
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_mao_archive_libzip_ZipFile_removeEntry0
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mao_archive_libzip_ZipFile
 * Method:    renameEntry
 * Signature: (JJ[B)Z
 */
JNIEXPORT jboolean JNICALL Java_mao_archive_libzip_ZipFile_renameEntry
  (JNIEnv *, jclass, jlong, jlong, jbyteArray);

/*
 * Class:     mao_archive_libzip_ZipFile
 * Method:    addFileEntry0
 * Signature: (J[BLjava/lang/String;JJIII)J
 */
JNIEXPORT jlong JNICALL Java_mao_archive_libzip_ZipFile_addFileEntry0
  (JNIEnv *, jclass, jlong, jbyteArray, jstring, jlong, jlong);

/*
 * Class:     mao_archive_libzip_ZipFile
 * Method:    addBufferEntry0
 * Signature: (J[B[BIII)J
 */
JNIEXPORT jlong JNICALL Java_mao_archive_libzip_ZipFile_addBufferEntry0
  (JNIEnv *, jclass, jlong, jbyteArray, jbyteArray);

/*
 * Class:     mao_archive_libzip_ZipFile
 * Method:    addDirectoryEntry0
 * Signature: (J[B)J
 */
JNIEXPORT jlong JNICALL Java_mao_archive_libzip_ZipFile_addDirectoryEntry0
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     mao_archive_libzip_ZipFile
 * Method:    nameLocate0
 * Signature: (J[B)J
 */
JNIEXPORT jlong JNICALL Java_mao_archive_libzip_ZipFile_nameLocate0
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     mao_archive_libzip_ZipFile
 * Method:    openStat0
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_mao_archive_libzip_ZipFile_openStat0
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mao_archive_libzip_ZipFile
 * Method:    getName0
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_mao_archive_libzip_ZipFile_getName0
  (JNIEnv *, jclass, jlong);

/*
 * Class:     mao_archive_libzip_ZipFile
 * Method:    getSize0
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_mao_archive_libzip_ZipFile_getSize0
  (JNIEnv *, jclass, jlong);

/*
 * Class:     mao_archive_libzip_ZipFile
 * Method:    getCSize0
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_mao_archive_libzip_ZipFile_getCSize0
  (JNIEnv *, jclass, jlong);

/*
 * Class:     mao_archive_libzip_ZipFile
 * Method:    getModifyTime0
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_mao_archive_libzip_ZipFile_getModifyTime0
  (JNIEnv *, jclass, jlong);

/*
 * Class:     mao_archive_libzip_ZipFile
 * Method:    getCrc0
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_mao_archive_libzip_ZipFile_getCrc0
  (JNIEnv *, jclass, jlong);

/*
 * Class:     mao_archive_libzip_ZipFile
 * Method:    getCompressionMethod0
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_mao_archive_libzip_ZipFile_getCompressionMethod0
  (JNIEnv *, jclass, jlong);

/*
 * Class:     mao_archive_libzip_ZipFile
 * Method:    getEncryptionMethod0
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_mao_archive_libzip_ZipFile_getEncryptionMethod0
  (JNIEnv *, jclass, jlong);

/*
 * Class:     mao_archive_libzip_ZipFile
 * Method:    freeStat0
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_mao_archive_libzip_ZipFile_freeStat0
  (JNIEnv *, jclass, jlong);

/*
 * Class:     mao_archive_libzip_ZipFile
 * Method:    getComment0
 * Signature: (JJ)[B
 */
JNIEXPORT jbyteArray JNICALL Java_mao_archive_libzip_ZipFile_getComment0
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mao_archive_libzip_ZipFile
 * Method:    setModifyTime0
 * Signature: (JJJ)Z
 */
JNIEXPORT jboolean JNICALL Java_mao_archive_libzip_ZipFile_setModifyTime0
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     mao_archive_libzip_ZipFile
 * Method:    setEncryptionMethod0
 * Signature: (JJILjava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_mao_archive_libzip_ZipFile_setEncryptionMethod0
  (JNIEnv *, jclass, jlong, jlong, jint, jstring);

/*
 * Class:     mao_archive_libzip_ZipFile
 * Method:    setCompressionMethod0
 * Signature: (JJII)Z
 */
JNIEXPORT jboolean JNICALL Java_mao_archive_libzip_ZipFile_setCompressionMethod0
  (JNIEnv *, jclass, jlong, jlong, jint, jint);

/*
 * Class:     mao_archive_libzip_ZipFile
 * Method:    setComment0
 * Signature: (JJ[B)Z
 */
JNIEXPORT jboolean JNICALL Java_mao_archive_libzip_ZipFile_setComment0
  (JNIEnv *, jclass, jlong, jlong, jbyteArray);

/*
 * Class:     mao_archive_libzip_ZipFile
 * Method:    getZipComment0
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_mao_archive_libzip_ZipFile_getZipComment0
  (JNIEnv *, jclass, jlong);

/*
 * Class:     mao_archive_libzip_ZipFile
 * Method:    setZipComment0
 * Signature: (J[B)Z
 */
JNIEXPORT jboolean JNICALL Java_mao_archive_libzip_ZipFile_setZipComment0
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     mao_archive_libzip_ZipFile
 * Method:    openEntry
 * Signature: (JJLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_mao_archive_libzip_ZipFile_openEntry
  (JNIEnv *, jclass, jlong, jlong, jstring);

/*
 * Class:     mao_archive_libzip_ZipFile
 * Method:    readEntryBytes
 * Signature: (J[BII)J
 */
JNIEXPORT jlong JNICALL Java_mao_archive_libzip_ZipFile_readEntryBytes
  (JNIEnv *, jclass, jlong, jbyteArray, jint, jint);

/*
 * Class:     mao_archive_libzip_ZipFile
 * Method:    closeEntry
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_mao_archive_libzip_ZipFile_closeEntry
  (JNIEnv *, jclass, jlong);

/*
 * Class:     mao_archive_libzip_ZipFile
 * Method:    close
 * Signature: (JLmao/archive/libzip/ProgressListener;)V
 */
JNIEXPORT void JNICALL Java_mao_archive_libzip_ZipFile_close
  (JNIEnv *, jclass, jlong, jobject);

#ifdef __cplusplus
}
#endif
#endif
